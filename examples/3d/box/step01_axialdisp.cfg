[pylithapp]
# Axial extension using Dirichlet boundary conditions.
#
#  y
#  ^
#  |
#   --> x
#             |
#             v
#         ----------
#        |          |
#        |          | 
#   <--- |          | --->
#        |          |
#        |          |
#         ----------
#             ^
#             |
#
# Dirichlet boundary conditions
#
# boundary_xneg: Ux=-a
# boundary_xpos: Ux=+a
# boundary_yneg: Ux=+b
# boundary_ypos: Ux=-b
# boundary_zneg: Uz=0

[pylithapp]
# File with version information and parameters (including defaults).
#
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step01_axialdisp-parameters.json

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem.solution.subfields.displacement]
# The solution has uniform strain, so displacement field is linear, so
# basis order of 1 should give exact solution.
basis_order = 1
quadrature_order = 1

[pylithapp.problem.solution_observers.domain]
writer.filename = output/step01_axialdisp-domain.h5

[pylithapp.problem.solution_observers.ground_surface]
writer.filename = output/step01_axialdisp-groundsurf.h5

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem.materials.elastic]
# Set the name of the file for material related output.
observers.observer.writer.filename = output/step01_axialdisp-elastic.h5

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# We have five Dirichlet boundary conditions as described above.
bc = [x_neg, x_pos, y_neg, y_pos, z_neg]
bc.x_neg = pylith.bc.DirichletTimeDependent
bc.x_pos = pylith.bc.DirichletTimeDependent
bc.y_neg = pylith.bc.DirichletTimeDependent
bc.y_pos = pylith.bc.DirichletTimeDependent
bc.z_neg = pylith.bc.DirichletTimeDependent

# Degrees of freedom:
#   x: 0
#   y: 1
#   z: 2
#
# The 'label' corresponds to the name of the nodeset we created in
# CUBIT/Trelis in bc.jou.


[pylithapp.problem.bc.x_pos]
# Set Ux=+2.0*m on the +x boundary.
constrained_dof = [0]
label = boundary_xpos

# The spatial database must contain both components even though we do
# not constrain the y and z components.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on +x boundary
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, initial_amplitude_z]
db_auxiliary_field.data = [+2.0*m, 0*m, 0*m]

observers.observer.writer.filename = output/step01_axialdisp-bc_xpos.h5

[pylithapp.problem.bc.x_neg]
# Set Ux=-2.0*m on the +x boundary.
constrained_dof = [0]
label = boundary_xneg

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on -x boundary
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, initial_amplitude_z]
db_auxiliary_field.data = [-2.0*m, 0*m, 0*m]

observers.observer.writer.filename = output/step01_axialdisp-bc_xneg.h5

[pylithapp.problem.bc.y_neg]
# Set Ux=+0.4*m on the -y boundary.
constrained_dof = [1]
label = boundary_yneg

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on -y boundary
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, initial_amplitude_z]
db_auxiliary_field.data = [0*m, +0.4*m, 0*m]

observers.observer.writer.filename = output/step01_axialdisp-bc_yneg.h5

[pylithapp.problem.bc.y_pos]
# Set Ux=-0.4*m on the +y boundary.
constrained_dof = [1]
label = boundary_ypos

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on +y boundary
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, initial_amplitude_z]
db_auxiliary_field.data = [0*m, -0.4*m, 0*m]

observers.observer.writer.filename = output/step01_axialdisp-bc_ypos.h5

[pylithapp.problem.bc.z_neg]
# Set Uz=0*m on the -z boundary.
constrained_dof = [2]
label = boundary_zneg

db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -z boundary

observers.observer.writer.filename = output/step01_axialdisp-bc_zneg.h5


# End of file
