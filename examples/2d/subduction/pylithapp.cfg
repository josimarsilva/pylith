[pylithapp]
# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
timedependent = 1
solution = 1
meshio = 1
dirichlettimedependent = 1
faultcohesivekin = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Change the default mesh reader to the CUBIT reader.
reader = pylith.meshio.MeshIOCubit
reader.filename = mesh_tri.exo
reader.coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Define the total time for the simulation and initial time step size.
initial_dt = 1.0*year
start_time = -1.0*year
total_time = 200.0*year

# Use nonlinear solver to ensure residual and Jacobian are consistent.
solver = nonlinear

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
solution = pylith.problems.SolnDispLagrange

[pylithapp.problem.solution.subfields]
displacement.basis_order = 1
displacement.quadrature_order = 1

lagrange_fault.basis_order = 1
lagrange_fault.quadrature_order = 1

[pylithapp.problem]
solution_observers = [domain, groundsurf]
solution_observers.groundsurf = pylith.meshio.OutputSolnBoundary

[pylithapp.problem.solution_observers.domain]
# writer.filename = output/SIMULATION-domain.h5
output_freq = time_step
time_step = 9.99999*year

[pylithapp.problem.solution_observers.groundsurf]
# Name of CUBIT nodeset for ground surface.
label = groundsurf
# writer.filename = output/SIMULATION-groundsurf.h5


# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]

# Set materials to an array of 4 materials:
#   'continent_crust'
#   'continent_mantle'
#   'ocean_crust'
#   'ocean_mantle'
materials = [continent_crust, continent_mantle, ocean_crust, ocean_mantle]

[pylithapp.timedependent.materials]

# Set bulk constitutive model for each material.
continent_crust = pylith.materials.IsotropicLinearElasticity
ocean_crust = pylith.materials.
continent_mantle = pylith.materials.MaxwellPlaneStrain
ocean_mantle = pylith.materials.MaxwellPlaneStrain

# Continental crust -----------------------------
[pylithapp.timedependent.materials.continent_crust]
label = Continental crust

# The id corresponds to the block number from CUBIT.
id = 1

db_auxiliary_field.label = Continental crust properties
db_auxiliary_field.iohandler.filename = mat_concrust.spatialdb



# Continental mantle --------------------
[pylithapp.timedependent.materials.continent_mantle]
label = Continental mantle

# The id corresponds to the block number from CUBIT.
id = 2

db_properties.label = Continental mantle properties
db_properties.iohandler.filename = mat_conmantle.spatialdb

# We are doing 2D quadrature for a triangle.
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2


# Oceanic crust --------------------
[pylithapp.timedependent.materials.ocean_crust]
label = Oceanic crust

# The id corresponds to the block number from CUBIT.
id = 3

db_properties.label = Oceanic crust properties
db_properties.iohandler.filename = mat_oceancrust.spatialdb

# We are doing 2D quadrature for a triangle.
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2


# Oceanic mantle --------------------
[pylithapp.timedependent.materials.ocean_mantle]
label = Oceanic mantle

# The id corresponds to the block number from CUBIT.
id = 4

db_properties.label = Oceanic mantle properties
db_properties.iohandler.filename = mat_oceanmantle.spatialdb

# We are doing 2D quadrature for a triangle.
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2


# Materials
[pylithapp.timedependent.materials.continent_crust.output]
cell_filter = pylith.meshio.CellFilterAvg
output_freq = time_step
time_step = 9.99999*year
writer = pylith.meshio.DataWriterHDF5

[pylithapp.timedependent.materials.continent_mantle.output]
cell_filter = pylith.meshio.CellFilterAvg
output_freq = time_step
time_step = 9.99999*year
writer = pylith.meshio.DataWriterHDF5
cell_data_fields = [stress,total_strain,viscous_strain]

[pylithapp.timedependent.materials.ocean_crust.output]
cell_filter = pylith.meshio.CellFilterAvg
output_freq = time_step
time_step = 9.99999*year
writer = pylith.meshio.DataWriterHDF5

[pylithapp.timedependent.materials.ocean_mantle.output]
cell_filter = pylith.meshio.CellFilterAvg
output_freq = time_step
time_step = 9.99999*year
writer = pylith.meshio.DataWriterHDF5
cell_data_fields = [stress,total_strain,viscous_strain]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
ts_type = beuler

pc_type = ilu

ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 1000
ksp_gmres_restart = 50
ksp_error_if_not_converged = true

snes_rtol = 1.0e-10
snes_atol = 1.0e-10
snes_error_if_not_converged = true

# Monitors for debugging
ts_monitor = true
ksp_monitor = true
ksp_converged_reason = true
snes_monitor = true
snes_converged_reason = true
snes_linesearch_monitor = true

ksp_view = true
snes_view = true


# End of file
