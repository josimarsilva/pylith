[pylithapp]
# Example with zero displacements on +-x and -y and coseismic slip
#
#  y
#  ^
#  |
#   --> x
#
#
#             -----------
#             |    |    |
# Ux, Uy= 0   |    |    | Ux, Uy= 0
#             |    |    |
#             |    |    |
#             -----------
#
# Dirichlet boundary conditions
#
# boundary_xneg: Ux = Uy = 0
# boundary_xpos: Ux = Uy = 0
#
# Fault has uniform slip of 2 m.
#
#
# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step01_slip_tri-parameters.json
# problem.progress_monitor.filename = output/step01_slip_tri-progress.txt

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
# For a quastistatic simulation with a fault, we have two solution fields:
# (1) displacement and (2) Lagrange multiplier. We use a predefined containter
# to create a solution field with these two subfields.
solution = pylith.problems.SolnDispLagrange

[pylithapp.problem.solution.subfields]
displacement.basis_order = 1
displacement.quadrature_order = 1

lagrange_fault.basis_order = 1
lagrange_fault.quadrature_order = 1

[pylithapp.problem.solution_observers.domain]
writer.filename = output/step01_slip_tri-domain.h5

[pylithapp.problem.solution_observers.top_boundary]
writer.filename = output/step01_slip_tri-boundary_ypos.h5

[pylithapp.problem.solution_observers.bot_boundary]
writer.filename = output/step01_slip_tri-boundary_yneg.h5

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem.materials.elastic_xneg]
observers.observer.writer.filename = output/step01_slip_tri-elastic_xneg.h5

[pylithapp.problem.materials.elastic_xpos]
observers.observer.writer.filename = output/step01_slip_tri-elastic_xpos.h5

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]

[pylithapp.problem.interfaces.fault]
# The label corresponds to the nodeset we created in CUBIT/Trelis for the fault.
label = fault

# For the fault, we need to specify an id associated with the cohesive cells that is
# different from any of the ids for the materials.
id = 10
observers.observer.writer.filename = output/step01_slip_tri-fault.h5

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, 2.0*m, 0.0*m]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
bc = [x_neg,x_pos]
bc.x_neg = pylith.bc.DirichletTimeDependent
bc.x_pos = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.x_pos]
constrained_dof = [0, 1]
label = face_xpos
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC +x boundary

observers.observer.writer.filename = output/step01_slip_tri-bc_xpos.h5

[pylithapp.problem.bc.x_neg]
constrained_dof = [0, 1]
label = face_xneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC -x boundary

observers.observer.writer.filename = output/step01_slip_tri-bc_xneg.h5


# End of file
