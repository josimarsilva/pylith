\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Multiphysics Finite-Element Formulation}{1}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cha:multiphysics:formulation}{{1}{1}{Multiphysics Finite-Element Formulation}{chapter.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}General Finite-Element Formulation}{1}{section.1.1}}
\newlabel{eqn:problem:form}{{1.1}{1}{General Finite-Element Formulation}{equation.1.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.1}Jacobian}{1}{subsection.1.1.1}}
\newlabel{eqn:jacobian:form}{{1.2}{1}{Jacobian}{equation.1.1.2}{}}
\newlabel{eqn:jacobian:index:form}{{1.4}{2}{Jacobian}{equation.1.1.4}{}}
\newlabel{eqn:jacobian:discrete:form}{{1.5}{2}{Jacobian}{equation.1.1.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.2}PETSc TS Notes}{2}{subsection.1.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.3}Explicit Time Stepping}{2}{subsection.1.1.3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Elasticity With Infinitesimal Strain and No Faults}{2}{section.1.2}}
\newlabel{eqn:elasticity:strong:form}{{1.6}{2}{Elasticity With Infinitesimal Strain and No Faults}{equation.1.2.6}{}}
\newlabel{eqn:bc:Neumann}{{1.7}{2}{Elasticity With Infinitesimal Strain and No Faults}{equation.1.2.7}{}}
\newlabel{eqn:bc:Dirichlet}{{1.8}{2}{Elasticity With Infinitesimal Strain and No Faults}{equation.1.2.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}Notation}{3}{subsection.1.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.2}Neglecting Inertia}{3}{subsection.1.2.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.2.1}Jacobians}{3}{subsubsection.1.2.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.3}Including Inertia}{4}{subsection.1.2.3}}
\newlabel{eqn:velocity:strong:form}{{1.18}{4}{Including Inertia}{equation.1.2.18}{}}
\newlabel{eqn:elasticity:order1:strong:form}{{1.19}{4}{Including Inertia}{equation.1.2.19}{}}
\newlabel{eqn:elasticity:displacement}{{1.24}{4}{Including Inertia}{equation.1.2.24}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.3.1}Implicit Time Stepping}{4}{subsubsection.1.2.3.1}}
\newlabel{eqn:elasticity:velocity:implicit}{{1.25}{4}{Implicit Time Stepping}{equation.1.2.25}{}}
\newlabel{eqn:elasticity:displacement:implicit}{{1.26}{4}{Implicit Time Stepping}{equation.1.2.26}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.3.2}Jacobians}{5}{subsubsection.1.2.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.4}Explicit Time Stepping}{5}{subsection.1.2.4}}
\newlabel{eqn:elasticity:velocity:explicit}{{1.37}{5}{Explicit Time Stepping}{equation.1.2.37}{}}
\newlabel{eqn:elasticity:displacement:explicit}{{1.38}{5}{Explicit Time Stepping}{equation.1.2.38}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.5}Elasticity Constitutive Models}{6}{subsection.1.2.5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.5.1}Isotropic Linear Elasticity}{6}{subsubsection.1.2.5.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.5.2}Isotropic Generalized Maxwell Viscoelasticity}{8}{subsubsection.1.2.5.2}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Elasticity With Infinitesimal Strain and Faults With Prescribed Slip}{8}{section.1.3}}
\newlabel{eqn:bc:prescribed_slip}{{1.85}{8}{Elasticity With Infinitesimal Strain and Faults With Prescribed Slip}{equation.1.3.85}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.1}Notation}{9}{subsection.1.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.2}Neglecting Inertia}{9}{subsection.1.3.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.2.1}Jacobians}{10}{subsubsection.1.3.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.3}Including Inertia}{11}{subsection.1.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.4}Explicit Time Stepping}{11}{subsection.1.3.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.4.1}Jacobians}{12}{subsubsection.1.3.4.1}}
\@writefile{toc}{\contentsline {section}{\numberline {1.4}Incompressible Isotropic Elasticity with Infinitesimal Strain (Bathe) and No Faults}{13}{section.1.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.1}Implicit Time Stepping}{13}{subsection.1.4.1}}
\newlabel{eqn:imcompressible:elasticity:velocity}{{1.141}{13}{Implicit Time Stepping}{equation.1.4.141}{}}
\newlabel{eqn:incompressible:elasticity:displacement:implicit}{{1.142}{13}{Implicit Time Stepping}{equation.1.4.142}{}}
\newlabel{eqn:incompressible:elasticity:pressure:implicit}{{1.143}{13}{Implicit Time Stepping}{equation.1.4.143}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1.1}Jacobians}{14}{subsubsection.1.4.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.2}Explicit Time Stepping}{15}{subsection.1.4.2}}
\newlabel{eqn:incompressibe:elasticity:velocity:explicit}{{1.162}{15}{Explicit Time Stepping}{equation.1.4.162}{}}
\newlabel{eqn:impcompressibe:elasticity:displacement:explicit}{{1.163}{15}{Explicit Time Stepping}{equation.1.4.163}{}}
\newlabel{eqn:incompressible:elasticity:pressure:explicit}{{1.164}{15}{Explicit Time Stepping}{equation.1.4.164}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.5}Poroelasticity with Infinitesimal Strain and No Faults or Inertia}{15}{section.1.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.1}Notation}{16}{subsection.1.5.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.2}Neglecting Inertia}{17}{subsection.1.5.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.5.2.1}Jacobians}{18}{subsubsection.1.5.2.1}}
\citation{Terzaghi:1923}
\citation{Verruijt:2013}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Analytical Benchmark Solutions}{21}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cha:Analytical-Solns}{{2}{21}{Analytical Benchmark Solutions}{chapter.2}{}}
\newlabel{sec:PoroelasticProblems}{{2.1}{21}{Poroelastic Problems}{section.2.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Poroelastic Problems}{21}{section.2.1}}
\newlabel{sub:Terzaghi-Consolidation}{{2.1.1}{21}{Terzaghi's Consolidation Problem}{subsection.2.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Terzaghi's Consolidation Problem}{21}{subsection.2.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1.1}Description}{21}{subsubsection.2.1.1.1}}
\citation{Cheng:Detourany:1988}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1.2}Solution}{22}{subsubsection.2.1.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Mandel's Problem}{22}{subsection.2.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}Cryer's Problem}{22}{subsection.2.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.4}Flow to Wells}{22}{subsection.2.1.4}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Extending PyLith}{23}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cha:developer}{{3}{23}{Extending PyLith}{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Code Layout}{23}{section.3.1}}
\newlabel{sec:code:layout}{{3.1}{23}{Code Layout}{section.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}Directory Structure}{23}{subsection.3.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.2}PyLith Application Flow}{24}{subsection.3.1.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2.1}Time-Dependent Problem}{25}{subsubsection.3.1.2.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2.2}Boundary between Python and C++}{25}{subsubsection.3.1.2.2}}
\newlabel{1@xvr}{{}{25}{Boundary between Python and C++}{subsubsection.3.1.2.2}{}}
\newlabel{1@vr}{{}{25}{Boundary between Python and C++}{subsubsection.3.1.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2.3}SWIG Interface Files}{28}{subsubsection.3.1.2.3}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Building for Development}{29}{section.3.2}}
\newlabel{sec:developer:build}{{3.2}{29}{Building for Development}{section.3.2}{}}
\newlabel{2@xvr}{{}{29}{Building for Development}{section.3.2}{}}
\newlabel{2@vr}{{}{29}{Building for Development}{section.3.2}{}}
\newlabel{3@xvr}{{}{29}{Building for Development}{section.3.2}{}}
\newlabel{3@vr}{{}{29}{Building for Development}{section.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Developer Workflow}{29}{subsection.3.2.1}}
\newlabel{4@xvr}{{}{29}{Developer Workflow}{subsection.3.2.1}{}}
\newlabel{4@vr}{{}{29}{Developer Workflow}{subsection.3.2.1}{}}
\newlabel{5@xvr}{{}{29}{Developer Workflow}{subsection.3.2.1}{}}
\newlabel{5@vr}{{}{29}{Developer Workflow}{subsection.3.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Overview of repositories for the Git forking workflow used in PyLith development. The main repository is the geodynamics/pylith at GitHub. Developers create a fork of that repository under their own GitHub account (e.g., saradeveloper), which is cloned to their local computer. Changes and additions to the code are committed to the repoisitory on the local computer, which are pushed to the developer's GitHub account. Once a development task is completed, a developer is encouraged to contribute the changes and additions to the main repository.}}{30}{figure.3.1}}
\newlabel{fig:developer:git:repositories}{{3.1}{30}{Overview of repositories for the Git forking workflow used in PyLith development. The main repository is the geodynamics/pylith at GitHub. Developers create a fork of that repository under their own GitHub account (e.g., saradeveloper), which is cloned to their local computer. Changes and additions to the code are committed to the repoisitory on the local computer, which are pushed to the developer's GitHub account. Once a development task is completed, a developer is encouraged to contribute the changes and additions to the main repository}{figure.3.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Overview of repositories and branches for the Git forking workflow used in PyLith development. From the {\ttfamily  master} branch on your local machine, you create a feature branch, e.g., {\ttfamily  feature-powerlaw}, to complete a single task such as adding a feature, fixing a bug, or making an improvement to the documentation. You should break up the changes into several steps, which are saved locally as commits. The commits may be pushed to the your repository on GitHub for backup or syncing across multiple computers. Once the task is completed, you submit a pull request to have the changes merged to the master branch on the community repository. Once the pull request is merged, you update your own master branch on your local computer from the community repository and then push the changes to your GitHub repository.}}{31}{figure.3.2}}
\newlabel{fig:developer:git:branch}{{3.2}{31}{Overview of repositories and branches for the Git forking workflow used in PyLith development. From the \gitbranch {master} branch on your local machine, you create a feature branch, e.g., \gitbranch {feature-powerlaw}, to complete a single task such as adding a feature, fixing a bug, or making an improvement to the documentation. You should break up the changes into several steps, which are saved locally as commits. The commits may be pushed to the your repository on GitHub for backup or syncing across multiple computers. Once the task is completed, you submit a pull request to have the changes merged to the master branch on the community repository. Once the pull request is merged, you update your own master branch on your local computer from the community repository and then push the changes to your GitHub repository}{figure.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}Developer Binary}{31}{subsection.3.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}PyLith Installer for Development}{31}{subsection.3.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.4}Keeping Your Fork in Sync with {\ttfamily  geodyamics/pylith}}{33}{subsection.3.2.4}}
\newlabel{6@xvr}{{}{33}{Keeping Your Fork in Sync with \gitbranch {geodyamics/pylith}}{subsection.3.2.4}{}}
\newlabel{6@vr}{{}{33}{Keeping Your Fork in Sync with \gitbranch {geodyamics/pylith}}{subsection.3.2.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.4.1}Set the upstream repository (done once per computer)}{33}{subsubsection.3.2.4.1}}
\newlabel{sec:developer:set:upstream}{{3.2.4.1}{33}{Set the upstream repository (done once per computer)}{subsubsection.3.2.4.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.4.2}Merging Updates from the Upstream Repository}{33}{subsubsection.3.2.4.2}}
\newlabel{sec:developer:merge:upstream}{{3.2.4.2}{33}{Merging Updates from the Upstream Repository}{subsubsection.3.2.4.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.5}Creating a New Feature Branch}{34}{subsection.3.2.5}}
\newlabel{sec:developer:create:branch}{{3.2.5}{34}{Creating a New Feature Branch}{subsection.3.2.5}{}}
\newlabel{7@xvr}{{}{34}{Creating a New Feature Branch}{subsection.3.2.5}{}}
\newlabel{7@vr}{{}{34}{Creating a New Feature Branch}{subsection.3.2.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.6}Staging, Committing, and Pushing Changes}{34}{subsection.3.2.6}}
\newlabel{sec:developer:commit}{{3.2.6}{34}{Staging, Committing, and Pushing Changes}{subsection.3.2.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.7}Making Pull Requests}{34}{subsection.3.2.7}}
\newlabel{sec:developer:create:pull:request}{{3.2.7}{34}{Making Pull Requests}{subsection.3.2.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.8}Rebuilding PETSc}{34}{subsection.3.2.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.9}Rebuilding PyLith}{35}{subsection.3.2.9}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.9.1}Overview}{35}{subsubsection.3.2.9.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.9.2}Makefiles}{35}{subsubsection.3.2.9.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.9.3}Build Targets}{35}{subsubsection.3.2.9.3}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}PETSc Finite-Element Implementation}{36}{section.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}{\sffamily  DMPlex}}{37}{subsection.3.3.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.1.1}Point Depth and Height}{37}{subsubsection.3.3.1.1}}
\newlabel{8@xvr}{{}{37}{Point Depth and Height}{subsubsection.3.3.1.1}{}}
\newlabel{8@vr}{{}{37}{Point Depth and Height}{subsubsection.3.3.1.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3.1}{\ignorespaces Depth and height of various topological pieces.}}{37}{table.3.1}}
\newlabel{tab:dmplex:height:depth}{{3.1}{37}{Depth and height of various topological pieces}{table.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}{\sffamily  PetscSection} and {\sffamily  PetscVec}}{37}{subsection.3.3.2}}
\newlabel{sec:developer:petsc:section}{{3.3.2}{37}{\object {PetscSection} and \object {PetscVec}}{subsection.3.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Conventional numbering (left) with vertices and cells numbered independently and {\sffamily  DMPlex} numbering (right) with cells, vertices, edges, (and faces), numbered sequentially.}}{38}{figure.3.3}}
\newlabel{fig:developer:mesh:topology}{{3.3}{38}{Conventional numbering (left) with vertices and cells numbered independently and \object {DMPlex} numbering (right) with cells, vertices, edges, (and faces), numbered sequentially}{figure.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.3}Integration}{39}{subsection.3.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.4}Projection}{40}{subsection.3.3.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.5}Point-wise Functions}{41}{subsection.3.3.5}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}Adding New Governing Equations and/or Materials}{42}{section.3.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.1}Python}{43}{subsection.3.4.1}}
\newlabel{9@xvr}{{}{43}{Python}{subsection.3.4.1}{}}
\newlabel{9@vr}{{}{43}{Python}{subsection.3.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.2}C++}{43}{subsection.3.4.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Class diagram for the solution field, solution subfields, and pre-defined containers of solution subfields.}}{44}{figure.3.4}}
\newlabel{fig:developer:solution:class}{{3.4}{44}{Class diagram for the solution field, solution subfields, and pre-defined containers of solution subfields}{figure.3.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.3}C++ Unit Tests}{44}{subsection.3.4.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces Class diagram for the bulk materials. Each material implementation inherits from the abstract {\sffamily  Material} class which inherits from the abstract {\sffamily  IntegratorPointwise} class.}}{45}{figure.3.5}}
\newlabel{fig:developer:material:class}{{3.5}{45}{Class diagram for the bulk materials. Each material implementation inherits from the abstract \object {Material} class which inherits from the abstract \object {IntegratorPointwise} class}{figure.3.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.4}Python Unit Tests}{45}{subsection.3.4.4}}
\@writefile{toc}{\contentsline {section}{\numberline {3.5}Debugging}{45}{section.3.5}}
\newlabel{sec:developer:debugging}{{3.5}{45}{Debugging}{section.3.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.1}Runing PyLith in a Debugger}{45}{subsection.3.5.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces Class diagram for testing the {\sffamily  IsotropicLinearElasticityPlaneStrain} material with a solution generated using the Method of Manufactured Solutions. {\sffamily  TestIsotropicLinearElasticityPlaneStrain\_UniformStrain} contains the parameters and generated solution and the subclasses include various discretizations. All of the test data is held in the {\sffamily  TestIsotropicLinearElasticityPlaneStrain\_Data} object.}}{46}{figure.3.6}}
\newlabel{fig:developer:test:material:class}{{3.6}{46}{Class diagram for testing the \object {IsotropicLinearElasticityPlaneStrain} material with a solution generated using the Method of Manufactured Solutions. \object {TestIsotropicLinearElasticityPlaneStrain\_UniformStrain} contains the parameters and generated solution and the subclasses include various discretizations. All of the test data is held in the \object {TestIsotropicLinearElasticityPlaneStrain\_Data} object}{figure.3.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.2}Runing Valgrind on PyLith}{48}{subsection.3.5.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.3}Debugging Output}{48}{subsection.3.5.3}}
\newlabel{10@xvr}{{}{48}{Debugging Output}{subsection.3.5.3}{}}
\newlabel{10@vr}{{}{48}{Debugging Output}{subsection.3.5.3}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Coding Style}{53}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cha:code:style}{{4}{53}{Coding Style}{chapter.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Error Checking}{54}{section.4.1}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}C/C++}{55}{section.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}Object Definition Files}{55}{subsection.4.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Object Implementation Files}{58}{subsection.4.2.2}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Python}{63}{section.4.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}Formatting C++ and Python Source Files}{65}{section.4.4}}
